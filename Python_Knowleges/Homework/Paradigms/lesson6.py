# Контекст:
# Предположим, что мы хотим найти элемент в массиве (получить
# его индекс). Мы можем это сделать просто перебрав все элементы.
# Но что, если массив уже отсортирован? В этом случае можно
# использовать бинарный поиск. Принцип прост: сначала берём
# элемент находящийся посередине и сравниваем с тем, который мы
# хотим найти. Если центральный элемент больше нашего,
# рассматриваем массив слева от центрального, а если больше -
# справа и повторяем так до тех пор, пока не найдем наш элемент.
# Ваша задача:
# Написать программу на любом языке в любой парадигме для
# бинарного поиска. На вход подаётся целочисленный массив и
# число. На выходе - индекс элемента или -1, в случае если искомого
# элемента нет в массиве.


def binary_search(numbers, value, min_index, max_index):
    if max_index < min_index:
        return -1

    mid = (max_index - min_index) // 2 + min_index

    if numbers[mid] < value:
        return binary_search(numbers, value, mid + 1, max_index)

    if numbers[mid] > value:
        return binary_search(numbers, value, min_index, mid - 1)

    return mid


my_nums = [0, 1, 2, 3, 4, 5, 6, 7, 8, 19, 91, 101]
print(binary_search(my_nums, 19, 0, len(my_nums) - 1))
