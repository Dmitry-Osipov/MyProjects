from jinja2 import Template

name = 'Фёдор'

tm = Template('Привет, {{ name }}')
msg = tm.render(name=name)

print(msg)

"""
Класс Template совершает подстановку - вместо name идёт соответствующее значение. Но когда он делает подстановку? При 
вызове метода render(), в котором создаём именованный параметр name со значением "Фёдор". Т.е. вместо {{ name }} будет 
стоять "Фёдор". Т.е. на выходе метод render() возвращает готовую строку.

Но зачем так сложно, если можно использовать обычную f-строку?
"""

msg2 = f'Привет, {name}'
print(msg2)

"""
Но, конечно, для простейшего примера это подходит. Но в дальнейшем мы увидим преобразования гораздо сложнее, которое с 
помощью f-строк так просто уже не реализовать.

Пока рассмотрим, какие конструкции внутри шаблонов вообще можно писать:
{% %} - спецификатор шаблона;
{{ }} - выражение для вставки конструкций Python в шаблон;
{# #} - блок комментариев;
# ## - строковый комментарий.

Усложним нашу программу:
"""

name = 'Михаил'
age = 20
tm = Template('Мне {{ a }} лет. Меня зовут {{ n }}.')
msg = tm.render(n=name, a=age)  # Именованные параметры воспринимаются как словарь, где ключ это переменная внутри
# Template, а значение - это его соответсвующее значение.
print(msg)

"""
Либо внутри скобок ещё можно прописывать любые конструкции языка Pyhton:
"""

tm = Template('Мне {{ a*2 }} лет. Меня зовут {{ n.upper() }}.')
msg = tm.render(n=name, a=age)
print(msg)

"""
Ещё усложним пример и представим информацию о человеке в виде класса Person:
"""


class Person:
    def __init__(self, name: str, age: int):
        self.__name = name
        self.__age = age

    @property
    def name(self):
        return self.__name

    @name.setter
    def name(self, name):
        self.__name = name

    @property
    def age(self):
        return self.__age

    @age.setter
    def age(self, age):
        self.__age = age


per = Person('Евгений', 35)
tm = Template('Мне {{ a }} лет. Меня зовут {{ n }}.')
msg = tm.render(a=per.age, n=per.name)
print(msg)

"""
Ну и наконец, можно передать данные в шаблон с помощью словаря:
"""

per = {'name': 'Дмитрий', 'age': 22, }
tm = Template('Мне {{ p["age"] }} лет. Меня зовут {{ p.name }}.')
msg = tm.render(p=per)
print(msg)
