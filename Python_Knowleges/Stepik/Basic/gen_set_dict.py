a = [x ** 2 for x in range(1, 5)]
print(a)  # [1, 4, 9, 16]

"""
Выше мы видим генератор списков, по аналогии можно делать генератор множеств и словарей, для чего достаточно квадратные 
скобки заменить на фигурные:
"""

# Генератор множеств - указываем только ключ:
a = {x ** 2 for x in range(1, 5)}
print(a)  # {16, 1, 4, 9}

# Генератор словарей - указываем ключ и значение:
a = {x: x ** 2 for x in range(1, 5)}
print(a)  # {1: 1, 2: 4, 3: 9, 4: 16}

# Преобразуем список во множество, состоящее только из чисел:
d = [1, 2, '1', '2', -4, 3, 4]
a = {int(x) for x in d}
print(a)  # {1, 2, 3, 4, -4}

"""
Важно отметить, что генератор множеств и словарей вновь работают быстрее, чем простой цикл + код выглядит компактнее.
"""

# С помощью генератора заменим все ключи на строки с заглавными буквами, а все значения превратим в числа:
m = {'неудовл.': 2, 'удовл.': 3, 'хорошо': '4', 'отлично': '5'}
a = {key.upper(): int(value) for key, value in m.items()}
print(a)  # {'НЕУДОВЛ.': 2, 'УДОВЛ.': 3, 'ХОРОШО': 4, 'ОТЛИЧНО': 5}

"""
Также в генераторах списках и словарей можно использовать условие:
"""

a = {int(x) for x in d if int(x) > 0}
print(a)  # {1, 2, 3, 4}

# Превратим ключи в значения и наоборот, выборка среди оценок [2;5]:
m = {'безнадёжно': 0, 'убого': 1, 'неудовл.': 2, 'удовл.': 3, 'хорошо': '4', 'отлично': '5'}
a = {int(value): key for key, value in m.items() if 2 <= int(value) <= 5}
print(a)  # {2: 'неудовл.', 3: 'удовл.', 4: 'хорошо', 5: 'отлично'}

"""
Также мы можем вносить вложенные генераторы в генераторы по аналогии с генераторами списков.
"""
