import datetime, requests, math, telebot
from telebot import types
from secrets import bot_token_weather
from secrets import weather_api


bot = telebot.TeleBot(bot_token_weather)


@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.chat.id
    first_name = message.chat.first_name
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard = types.KeyboardButton(text='–¢—É–ª–∞')
    keyboard_2 = types.KeyboardButton(text='–ù–æ–≤–æ–º–æ—Å–∫–æ–≤—Å–∫')
    keyboard_3 = types.KeyboardButton(text='–ö–∏–º–æ–≤—Å–∫')
    keyboard_4 = types.KeyboardButton(text='–ö–∏—Ä–µ–µ–≤—Å–∫')
    keyboard_5 = types.KeyboardButton(text='–Ø—Å–Ω–æ–≥–æ—Ä—Å–∫')
    keyboard_6 = types.KeyboardButton(text='–ú–æ—Å–∫–≤–∞')
    markup.add(keyboard, keyboard_2, keyboard_3, keyboard_4, keyboard_5, keyboard_6)
    bot.send_message(chat_id, f'–ü—Ä–∏–≤–µ—Ç, {first_name}! –Ø —á–∞—Ç-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –ø–æ–≥–æ–¥—É –≤ –Ω—É–∂–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö. –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É - –ø–æ–ª—É—á–∏—à—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def text(message):
    chat_id = message.chat.id
    if message.text == '–ú–æ—Å–∫–≤–∞':
        response = requests.get(f'http://api.openweathermap.org/data/2.5/weather?q=–º–æ—Å–∫–≤–∞&lang=ru&units=metric&appid={weather_api}')
        data = response.json()
        city = data['name']
        cur_temp = data['main']['temp']
        humidity = data['main']['humidity']
        pressure = data['main']['pressure']
        wind = data['wind']['speed']
        sunrise_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunrise'])
        sunset_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunset'])
        length_of_day = sunset_timestamp - sunrise_timestamp

        code_to_smile = {
            'Clear': '–Ø—Å–Ω–æ \U00002600',
            'Clouds': '–û–±–ª–∞—á–Ω–æ \U00002601',
            'Rain': '–î–æ–∂–¥—å \U00002614',
            'Drizzle': '–ú–æ—Ä–æ—Å—å \U00002614',
            'Thunderstorm': '–ì—Ä–æ–∑–∞ \U000026A1',
            'Snow': '–°–Ω–µ–≥ \U0001F328',
            'Mist': '–¢—É–º–∞–Ω \U0001F32B'
        }

        weather_description = data['weather'][0]['main']
        if weather_description in code_to_smile:
            wd = code_to_smile[weather_description]
        else:
            wd = '–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞...'

        bot.send_message(chat_id, f'{datetime.datetime.now().strftime("%Y-%m-%d %H:%M")}\n'
                            f'–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_temp}¬∞C {wd}\n'
                            f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n–î–∞–≤–ª–µ–Ω–∏–µ: {math.ceil(pressure/1.333)} –º–º.—Ä—Ç.—Å—Ç.\n–í–µ—Ç–µ—Ä: {wind} –º/—Å\n'
                            f'–í–æ—Å—Ö–æ–¥: {sunrise_timestamp}\n–ó–∞–∫–∞—Ç: {sunset_timestamp}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {length_of_day}\n'
                            f'–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!üò∏'
                            )
    elif message.text == '–ù–æ–≤–æ–º–æ—Å–∫–æ–≤—Å–∫':
        response = requests.get(f'http://api.openweathermap.org/data/2.5/weather?q=–Ω–æ–≤–æ–º–æ—Å–∫–æ–≤—Å–∫&lang=ru&units=metric&appid={weather_api}')
        data = response.json()
        city = data['name']
        cur_temp = data['main']['temp']
        humidity = data['main']['humidity']
        pressure = data['main']['pressure']
        wind = data['wind']['speed']
        sunrise_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunrise'])
        sunset_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunset'])
        length_of_day = sunset_timestamp - sunrise_timestamp

        code_to_smile = {
            'Clear': '–Ø—Å–Ω–æ \U00002600',
            'Clouds': '–û–±–ª–∞—á–Ω–æ \U00002601',
            'Rain': '–î–æ–∂–¥—å \U00002614',
            'Drizzle': '–ú–æ—Ä–æ—Å—å \U00002614',
            'Thunderstorm': '–ì—Ä–æ–∑–∞ \U000026A1',
            'Snow': '–°–Ω–µ–≥ \U0001F328',
            'Mist': '–¢—É–º–∞–Ω \U0001F32B'
        }

        weather_description = data['weather'][0]['main']
        if weather_description in code_to_smile:
            wd = code_to_smile[weather_description]
        else:
            wd = '–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞...'

        bot.send_message(chat_id, f'{datetime.datetime.now().strftime("%Y-%m-%d %H:%M")}\n'
                            f'–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_temp}¬∞C {wd}\n'
                            f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n–î–∞–≤–ª–µ–Ω–∏–µ: {math.ceil(pressure / 1.333)} –º–º.—Ä—Ç.—Å—Ç.\n–í–µ—Ç–µ—Ä: {wind} –º/—Å\n'
                            f'–í–æ—Å—Ö–æ–¥: {sunrise_timestamp}\n–ó–∞–∫–∞—Ç: {sunset_timestamp}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {length_of_day}\n'
                            f'–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—èüò∏!'
                            )
    elif message.text == '–Ø—Å–Ω–æ–≥–æ—Ä—Å–∫':
        response = requests.get(f'http://api.openweathermap.org/data/2.5/weather?q=—è—Å–Ω–æ–≥–æ—Ä—Å–∫&lang=ru&units=metric&appid={weather_api}')
        data = response.json()
        city = data['name']
        cur_temp = data['main']['temp']
        humidity = data['main']['humidity']
        pressure = data['main']['pressure']
        wind = data['wind']['speed']
        sunrise_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunrise'])
        sunset_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunset'])
        length_of_day = sunset_timestamp - sunrise_timestamp

        code_to_smile = {
            'Clear': '–Ø—Å–Ω–æ \U00002600',
            'Clouds': '–û–±–ª–∞—á–Ω–æ \U00002601',
            'Rain': '–î–æ–∂–¥—å \U00002614',
            'Drizzle': '–ú–æ—Ä–æ—Å—å \U00002614',
            'Thunderstorm': '–ì—Ä–æ–∑–∞ \U000026A1',
            'Snow': '–°–Ω–µ–≥ \U0001F328',
            'Mist': '–¢—É–º–∞–Ω \U0001F32B'
        }

        weather_description = data['weather'][0]['main']
        if weather_description in code_to_smile:
            wd = code_to_smile[weather_description]
        else:
            wd = '–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞...'

        bot.send_message(chat_id, f'{datetime.datetime.now().strftime("%Y-%m-%d %H:%M")}\n'
                            f'–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_temp}¬∞C {wd}\n'
                            f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n–î–∞–≤–ª–µ–Ω–∏–µ: {math.ceil(pressure/1.333)} –º–º.—Ä—Ç.—Å—Ç.\n–í–µ—Ç–µ—Ä: {wind} –º/—Å\n'
                            f'–í–æ—Å—Ö–æ–¥: {sunrise_timestamp}\n–ó–∞–∫–∞—Ç: {sunset_timestamp}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {length_of_day}\n'
                            f'–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—èüò∏!'
                            )
    elif message.text == '–ö–∏—Ä–µ–µ–≤—Å–∫':
        response = requests.get(f'http://api.openweathermap.org/data/2.5/weather?q=–∫–∏—Ä–µ–µ–≤—Å–∫&lang=ru&units=metric&appid={weather_api}')
        data = response.json()
        city = data['name']
        cur_temp = data['main']['temp']
        humidity = data['main']['humidity']
        pressure = data['main']['pressure']
        wind = data['wind']['speed']
        sunrise_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunrise'])
        sunset_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunset'])
        length_of_day = sunset_timestamp - sunrise_timestamp

        code_to_smile = {
            'Clear': '–Ø—Å–Ω–æ \U00002600',
            'Clouds': '–û–±–ª–∞—á–Ω–æ \U00002601',
            'Rain': '–î–æ–∂–¥—å \U00002614',
            'Drizzle': '–ú–æ—Ä–æ—Å—å \U00002614',
            'Thunderstorm': '–ì—Ä–æ–∑–∞ \U000026A1',
            'Snow': '–°–Ω–µ–≥ \U0001F328',
            'Mist': '–¢—É–º–∞–Ω \U0001F32B'
        }

        weather_description = data['weather'][0]['main']
        if weather_description in code_to_smile:
            wd = code_to_smile[weather_description]
        else:
            wd = '–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞...'

        bot.send_message(chat_id, f'{datetime.datetime.now().strftime("%Y-%m-%d %H:%M")}\n'
                            f'–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_temp}¬∞C {wd}\n'
                            f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n–î–∞–≤–ª–µ–Ω–∏–µ: {math.ceil(pressure / 1.333)} –º–º.—Ä—Ç.—Å—Ç.\n–í–µ—Ç–µ—Ä: {wind} –º/—Å\n'
                            f'–í–æ—Å—Ö–æ–¥: {sunrise_timestamp}\n–ó–∞–∫–∞—Ç: {sunset_timestamp}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {length_of_day}\n'
                            f'–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!üò∏'
                            )
    elif message.text == '–¢—É–ª–∞':
        response = requests.get(f'http://api.openweathermap.org/data/2.5/weather?q=—Ç—É–ª–∞&lang=ru&units=metric&appid={weather_api}')
        data = response.json()
        city = data['name']
        cur_temp = data['main']['temp']
        humidity = data['main']['humidity']
        pressure = data['main']['pressure']
        wind = data['wind']['speed']
        sunrise_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunrise'])
        sunset_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunset'])
        length_of_day = sunset_timestamp - sunrise_timestamp

        code_to_smile = {
            'Clear': '–Ø—Å–Ω–æ \U00002600',
            'Clouds': '–û–±–ª–∞—á–Ω–æ \U00002601',
            'Rain': '–î–æ–∂–¥—å \U00002614',
            'Drizzle': '–ú–æ—Ä–æ—Å—å \U00002614',
            'Thunderstorm': '–ì—Ä–æ–∑–∞ \U000026A1',
            'Snow': '–°–Ω–µ–≥ \U0001F328',
            'Mist': '–¢—É–º–∞–Ω \U0001F32B'
        }

        weather_description = data['weather'][0]['main']
        if weather_description in code_to_smile:
            wd = code_to_smile[weather_description]
        else:
            wd = '–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞...'

        bot.send_message(chat_id, f'{datetime.datetime.now().strftime("%Y-%m-%d %H:%M")}\n'
                            f'–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_temp}¬∞C {wd}\n'
                            f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n–î–∞–≤–ª–µ–Ω–∏–µ: {math.ceil(pressure / 1.333)} –º–º.—Ä—Ç.—Å—Ç.\n–í–µ—Ç–µ—Ä: {wind} –º/—Å\n'
                            f'–í–æ—Å—Ö–æ–¥: {sunrise_timestamp}\n–ó–∞–∫–∞—Ç: {sunset_timestamp}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {length_of_day}\n'
                            f'–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!üò∏'
                            )
    elif message.text == '–ö–∏–º–æ–≤—Å–∫':
        response = requests.get(f'http://api.openweathermap.org/data/2.5/weather?q=–∫–∏–º–æ–≤—Å–∫&lang=ru&units=metric&appid={weather_api}')
        data = response.json()
        city = data['name']
        cur_temp = data['main']['temp']
        humidity = data['main']['humidity']
        pressure = data['main']['pressure']
        wind = data['wind']['speed']
        sunrise_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunrise'])
        sunset_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunset'])
        length_of_day = sunset_timestamp - sunrise_timestamp

        code_to_smile = {
            'Clear': '–Ø—Å–Ω–æ \U00002600',
            'Clouds': '–û–±–ª–∞—á–Ω–æ \U00002601',
            'Rain': '–î–æ–∂–¥—å \U00002614',
            'Drizzle': '–ú–æ—Ä–æ—Å—å \U00002614',
            'Thunderstorm': '–ì—Ä–æ–∑–∞ \U000026A1',
            'Snow': '–°–Ω–µ–≥ \U0001F328',
            'Mist': '–¢—É–º–∞–Ω \U0001F32B'
        }

        weather_description = data['weather'][0]['main']
        if weather_description in code_to_smile:
            wd = code_to_smile[weather_description]
        else:
            wd = '–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞...'

        bot.send_message(chat_id, f'{datetime.datetime.now().strftime("%Y-%m-%d %H:%M")}\n'
                            f'–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_temp}¬∞C {wd}\n'
                            f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n–î–∞–≤–ª–µ–Ω–∏–µ: {math.ceil(pressure / 1.333)} –º–º.—Ä—Ç.—Å—Ç.\n–í–µ—Ç–µ—Ä: {wind} –º/—Å\n'
                            f'–í–æ—Å—Ö–æ–¥: {sunrise_timestamp}\n–ó–∞–∫–∞—Ç: {sunset_timestamp}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {length_of_day}\n'
                            f'–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—èüò∏!'
                            )


bot.polling(none_stop=True)